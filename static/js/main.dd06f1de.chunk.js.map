{"version":3,"sources":["initialState/initialState.ts","store/notification-slice.ts","components/MyModal.tsx","firebase/firebase.ts","components/Todo.tsx","store/auth-slice.ts","components/NewTodo.tsx","pages/main/TodoApp.tsx","store/index.ts","pages/main/PrivateRoute.tsx","pages/login/Login.tsx","pages/registration/Registration.tsx","components/MySnackbar.tsx","App.tsx","index.tsx"],"names":["initialInput","email","password","initialInputRegistration","confirmPassword","initialStateTodo","id","title","content","initialStateTodos","initialStateTodoToEdit","notificationSlice","createSlice","name","initialState","severity","message","open","reducers","sendNotification","state","action","payload","showNotification","notificationActions","actions","MyModal","props","Modal","onClose","setOpen","aria-labelledby","aria-describedby","children","process","firebaseConfig","apiKey","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","fb","firebase","initializeApp","useStyles","makeStyles","root","height","display","width","flexDirection","justifyContent","color","backgroundColor","boxShadow","borderRadius","paper","alignItems","transform","border","Todo","setTodoToEdit","useState","openModal","setOpenModal","userId","useSelector","auth","dispatch","useDispatch","classes","body","className","Box","Button","variant","onClick","firestore","collection","doc","delete","catch","error","handleDelete","Grid","item","xs","sm","textAlign","Typography","noWrap","CardContent","paragraph","CardActions","size","todoData","update","handleEdit","authSlice","isAuth","darkmodeOn","login","logout","authActions","NewTodo","todoToEdit","todo","setTodo","useEffect","handleChange","inputName","e","target","value","Date","now","saveTodo","a","set","then","Container","component","maxWidth","FormControl","fullWidth","InputLabel","Input","onChange","multiline","rows","flexWrap","my","preventDefault","theme","createStyles","palette","background","shadows","padding","spacing","TodoApp","todos","setTodos","history","useHistory","userName","localStorage","getItem","getTodos","orderBy","onSnapshot","querySnapshot","forEach","push","data","style","minHeight","AppBar","position","py","px","removeItem","signOut","replace","marginTop","pt","mt","container","direction","justify","length","map","store","configureStore","reducer","notification","PrivateRoute","Component","routeProps","render","_","to","Login","input","setInput","p","htmlFor","type","signInWithEmailAndPassword","response","username","user","substring","indexOf","setItem","uid","textDecoration","fontSize","Registration","createUserWithEmailAndPassword","MySnackbar","alert","Alert","Snackbar","autoHideDuration","App","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd06f1de.chunk.js","sourcesContent":["import { Todo } from \"../models/models\";\r\nimport { Auth } from \"../models/models\";\r\n\r\n//Slices\r\n\r\nexport const initialStateAuth: Auth = {\r\n  isAuth: null,\r\n  userId: null,\r\n  darkmodeOn: false,\r\n};\r\n\r\n//Components\r\n\r\nexport const initialInput = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nexport const initialInputRegistration = {\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\nexport const initialError = {\r\n  error: false,\r\n  errorMessage: \"\",\r\n};\r\n\r\nexport const initialStateTodo = { id: null, title: \"\", content: \"\" };\r\n\r\nexport const initialStateNotification = {\r\n  severity: \"\",\r\n  message: \"\",\r\n  open: false,\r\n};\r\n\r\n//maybe and error? todoapp.tsx\r\nexport const initialStateTodos: Todo[] = [];\r\nexport const initialStateTodoToEdit: Todo = {\r\n  id: null,\r\n  title: \"\",\r\n  content: \"\",\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { initialStateNotification } from \"../initialState/initialState\";\r\nimport { Notification } from \"../models/models\";\r\n\r\nconst notificationSlice = createSlice({\r\n  name: \"notification\",\r\n  initialState: initialStateNotification,\r\n  reducers: {\r\n    sendNotification(state, action: PayloadAction<Notification>) {\r\n      state.severity = action.payload.severity;\r\n      state.message = action.payload.message;\r\n      state.open = action.payload.open;\r\n    },\r\n    showNotification(state, action: PayloadAction<boolean>) {\r\n      state.open = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const notificationActions = notificationSlice.actions;\r\nexport default notificationSlice;\r\n","import React, { ReactElement } from \"react\";\r\nimport { Modal } from \"@material-ui/core\";\r\n\r\nconst MyModal: React.FC<{\r\n  children: ReactElement;\r\n  open: boolean;\r\n  setOpen: (bool: boolean) => void;\r\n}> = (props) => {\r\n  return (\r\n    <Modal\r\n      open={props.open}\r\n      onClose={() => props.setOpen(false)}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      {props.children}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MyModal;\r\n","import firebase from \"firebase\";\r\n\r\nconst {\r\n  REACT_APP_API_KEY,\r\n  REACT_APP_AUTH_DOMAIN,\r\n  REACT_APP_PROJECT_ID,\r\n  REACT_APP_STORAGE_BUCKET,\r\n  REACT_APP_MESSAGING_SENDER_ID,\r\n  REACT_APP_APP_ID,\r\n} = process.env;\r\n\r\nvar firebaseConfig = {\r\n  apiKey: REACT_APP_API_KEY,\r\n  authDomain: REACT_APP_AUTH_DOMAIN,\r\n  projectId: REACT_APP_PROJECT_ID,\r\n  storageBucket: REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: REACT_APP_APP_ID,\r\n};\r\nconst fb = firebase.initializeApp(firebaseConfig);\r\nexport default fb;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Box,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../store/index\";\r\nimport { Todo as TodoType } from \"../models/models\";\r\nimport { notificationActions } from \"../store/notification-slice\";\r\nimport MyModal from \"./MyModal\";\r\nimport fb from \"../firebase/firebase\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"150px\",\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    color: \"#1c1e21\",\r\n    backgroundColor: \"#fff\",\r\n    boxShadow:\r\n      \"rgba(60, 64, 67, 0.3) 1px 2px 3px 1px, rgba(60, 64, 67, 0.15) 1px 2px 4px 2px\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    width: \"70vw\",\r\n    height: \"120px\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    transform: \"translate(20%,283%)\",\r\n    backgroundColor: \"#fafafa\",\r\n    border: \"2px solid #000\",\r\n  },\r\n});\r\n\r\nconst Todo: React.FC<{\r\n  title: string;\r\n  id: number | null;\r\n  content: string;\r\n  setTodoToEdit: (todoToEdit: TodoType) => void;\r\n  setOpen: (setOpen: boolean) => void;\r\n}> = ({ title, id, content, setTodoToEdit, setOpen }) => {\r\n  const [openModal, setOpenModal] = useState<boolean>(false);\r\n  const userId = useSelector((state: RootState) => state.auth.userId);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const handleDelete = (id: number | null) => {\r\n    fb.firestore()\r\n      .collection(`todos`)\r\n      .doc(\"users\")\r\n      .collection(`${userId}`)\r\n      .doc(`${id}`)\r\n      .delete()\r\n      .catch((error) =>\r\n        dispatch(\r\n          notificationActions.sendNotification({\r\n            severity: \"error\",\r\n            message: error.message,\r\n            open: true,\r\n          })\r\n        )\r\n      );\r\n    dispatch(\r\n      notificationActions.sendNotification({\r\n        severity: \"warning\",\r\n        message: \"Todo deleted.\",\r\n        open: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleEdit = (id: number | null) => {\r\n    setOpen(true);\r\n    const todoData = { id, title, content };\r\n    setTodoToEdit(todoData);\r\n\r\n    fb.firestore()\r\n      .collection(`todos`)\r\n      .doc(\"users\")\r\n      .collection(`${userId}`)\r\n      .doc(`${id}`)\r\n      .update(todoData)\r\n      .catch((error) =>\r\n        dispatch(\r\n          notificationActions.sendNotification({\r\n            severity: \"error\",\r\n            message: error.message,\r\n            open: true,\r\n          })\r\n        )\r\n      );\r\n  };\r\n\r\n  const body = (\r\n    <div className={classes.paper}>\r\n      <h2>Do you want to delete this Todo?</h2>\r\n      <Box>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => handleDelete(id)}\r\n        >\r\n          Delete\r\n        </Button>\r\n        <Button variant=\"contained\" onClick={() => setOpenModal(false)}>\r\n          Cancel\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <MyModal open={openModal} setOpen={setOpenModal}>\r\n        {body}\r\n      </MyModal>\r\n      <Grid item xs={12} sm={6}>\r\n        <Box className={classes.root}>\r\n          <Box textAlign=\"center\">\r\n            <Typography noWrap variant=\"h6\">\r\n              {title}\r\n            </Typography>\r\n          </Box>\r\n          <CardContent>\r\n            <Typography noWrap paragraph>\r\n              {content}\r\n            </Typography>\r\n          </CardContent>\r\n          <Box display=\"flex\" justifyContent=\"flex-end\">\r\n            <CardActions>\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                onClick={() => handleEdit(id)}\r\n              >\r\n                <EditRoundedIcon />\r\n              </Button>\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => setOpenModal(true)}\r\n              >\r\n                <HighlightOffRoundedIcon />\r\n              </Button>\r\n            </CardActions>\r\n          </Box>\r\n        </Box>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { initialStateAuth } from \"../initialState/initialState\";\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: initialStateAuth,\r\n  reducers: {\r\n    login(state, action: PayloadAction<string | null>) {\r\n      state.isAuth = true;\r\n      state.userId = action.payload;\r\n    },\r\n    logout(state) {\r\n      state.isAuth = false;\r\n      state.userId = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const authActions = authSlice.actions;\r\nexport default authSlice;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  Container,\r\n  Button,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport Todo, { InputTodo } from \"../models/models\";\r\nimport fb from \"../firebase/firebase\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store/index\";\r\nimport { notificationActions } from \"../store/notification-slice\";\r\nimport { initialStateTodo } from \"../initialState/initialState\";\r\n\r\nconst NewTodo: React.FC<{\r\n  todoToEdit: Todo;\r\n  setTodoToEdit: (todoToEdit: Todo) => void;\r\n  setOpen: (setOpen: boolean) => void;\r\n}> = ({ todoToEdit, setTodoToEdit, setOpen }) => {\r\n  const [todo, setTodo] = useState<InputTodo>(initialStateTodo);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userId = useSelector((state: RootState) => state.auth.userId);\r\n\r\n  useEffect(() => {\r\n    if (todoToEdit.id) {\r\n      setTodo(todoToEdit);\r\n    }\r\n    return () => setTodo(initialStateTodo);\r\n  }, [todoToEdit]);\r\n\r\n  const handleChange =\r\n    (inputName: keyof InputTodo) =>\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (todo.id) {\r\n        setTodo({\r\n          ...todo,\r\n          [inputName]: e.target.value,\r\n        });\r\n      } else {\r\n        setTodo({\r\n          ...todo,\r\n          [inputName]: e.target.value,\r\n          id: Date.now(),\r\n        });\r\n      }\r\n    };\r\n\r\n  const saveTodo = async (id: any, title: string, content: string) => {\r\n    await fb\r\n      .firestore()\r\n      .collection(`todos`)\r\n      .doc(\"users\")\r\n      .collection(`${userId}`)\r\n      .doc(`${id}`)\r\n      .set({ id, title, content })\r\n      .then(() => {\r\n        setTodo(initialStateTodo);\r\n      })\r\n      .catch((error) => {\r\n        dispatch(\r\n          notificationActions.sendNotification({\r\n            severity: \"error\",\r\n            message: error.message,\r\n            open: true,\r\n          })\r\n        );\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (todo.title === \"\" || todo.content === \"\") {\r\n      dispatch(\r\n        notificationActions.sendNotification({\r\n          severity: \"error\",\r\n          message: \"Inputs cannot be empty.\",\r\n          open: true,\r\n        })\r\n      );\r\n      return;\r\n    }\r\n\r\n    saveTodo(todo.id, todo.title, todo.content);\r\n\r\n    if (todoToEdit.id) {\r\n      setTodoToEdit({ id: null, title: \"\", content: \"\" });\r\n      dispatch(\r\n        notificationActions.sendNotification({\r\n          severity: \"info\",\r\n          message: \"Todo updated.\",\r\n          open: true,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        notificationActions.sendNotification({\r\n          severity: \"success\",\r\n          message: \"New todo added.\",\r\n          open: true,\r\n        })\r\n      );\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  const handleCancel = () => {\r\n    setTodoToEdit({ id: null, title: \"\", content: \"\" });\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\">\r\n      <FormControl fullWidth>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input onChange={handleChange(\"title\")} value={todo.title} />\r\n      </FormControl>\r\n      <FormControl fullWidth>\r\n        <InputLabel>Content</InputLabel>\r\n        <Input\r\n          onChange={handleChange(\"content\")}\r\n          value={todo.content}\r\n          multiline={true}\r\n          rows=\"4\"\r\n        />\r\n      </FormControl>\r\n      <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"space-evenly\">\r\n        <Box width=\"40%\" my={1}>\r\n          <Button\r\n            onClick={handleSubmit}\r\n            variant=\"contained\"\r\n            fullWidth\r\n            color=\"primary\"\r\n          >\r\n            {todoToEdit.id ? \"Update\" : \"Add\"}\r\n          </Button>\r\n        </Box>\r\n        <Box width=\"40%\" my={1}>\r\n          <Button\r\n            onClick={handleCancel}\r\n            variant=\"contained\"\r\n            fullWidth\r\n            color=\"default\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NewTodo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Box, Button, Grid, Typography, AppBar } from \"@material-ui/core\";\r\nimport { IoMdAddCircle } from \"react-icons/io\";\r\nimport { FcTodoList } from \"react-icons/fc\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../store/index\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Todo from \"../../components/Todo\";\r\n\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport { Todo as TodoType } from \"../../models/models\";\r\nimport { authActions } from \"../../store/auth-slice\";\r\nimport { notificationActions } from \"../../store/notification-slice\";\r\nimport NewTodo from \"../../components/NewTodo\";\r\nimport fb from \"../../firebase/firebase\";\r\nimport MyModal from \"../../components/MyModal\";\r\nimport {\r\n  initialStateTodos,\r\n  initialStateTodoToEdit,\r\n} from \"../../initialState/initialState\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      width: \"70vw\",\r\n      height: \"280px\",\r\n      transform: \"translate(21.5%,80%)\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 2, 2),\r\n    },\r\n  })\r\n);\r\n\r\nconst TodoApp: React.FC = () => {\r\n  const [todos, setTodos] = useState<TodoType[]>(initialStateTodos);\r\n  const [todoToEdit, setTodoToEdit] = useState(initialStateTodoToEdit);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const userId = useSelector((state: RootState) => state.auth.userId);\r\n\r\n  const userName = localStorage.getItem(\"username\");\r\n\r\n  const getTodos = async (userId: string | null) => {\r\n    await fb\r\n      .firestore()\r\n      .collection(`todos`)\r\n      .doc(\"users\")\r\n      .collection(`${userId}`)\r\n      .orderBy(\"id\", \"desc\")\r\n      .onSnapshot((querySnapshot) => {\r\n        let todos: any = [];\r\n        querySnapshot.forEach((todo) => {\r\n          todos.push({ ...todo.data() });\r\n        });\r\n        setTodos(todos);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTodos(userId);\r\n  }, [userId]);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"loged\");\r\n    localStorage.removeItem(\"username\");\r\n    localStorage.removeItem(\"userId\");\r\n\r\n    fb.auth()\r\n      .signOut()\r\n      .then(() => {\r\n        history.replace(\"/login\");\r\n        dispatch(authActions.login(null));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(\r\n          notificationActions.sendNotification({\r\n            severity: \"error\",\r\n            message: error.message,\r\n            open: true,\r\n          })\r\n        );\r\n      });\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const body = (\r\n    <div className={classes.paper}>\r\n      <NewTodo\r\n        todoToEdit={todoToEdit}\r\n        setTodoToEdit={setTodoToEdit}\r\n        setOpen={setOpen}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <MyModal open={open} setOpen={setOpen}>\r\n        {body}\r\n      </MyModal>\r\n\r\n      <Box style={{ backgroundColor: \"#fff\" }} minHeight=\"96vh\">\r\n        <AppBar position=\"static\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            py={1}\r\n            px={1}\r\n            style={{ backgroundColor: \"#1976d2\" }}\r\n          >\r\n            <Typography variant=\"h6\">{userName}</Typography>\r\n            <Box display=\"flex\">\r\n              <Button onClick={handleLogout} variant=\"contained\">\r\n                Logout\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </AppBar>\r\n        <h1 style={{ textAlign: \"center\", marginTop: \"1.5rem\" }}>\r\n          <span>\r\n            <FcTodoList size=\"1.5rem\" />\r\n          </span>\r\n          <span>TODO</span>\r\n          <span style={{ color: \"rgb(25, 118, 210)\" }}>APP</span>\r\n        </h1>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" pt={6}>\r\n          <Button onClick={() => setOpen(true)}>\r\n            <IoMdAddCircle size=\"4rem\" color=\"rgb(25, 118, 210)\" />\r\n          </Button>\r\n        </Box>\r\n        <Box mt={2} px={1}>\r\n          <Grid container direction=\"row\" justify=\"center\" spacing={1}>\r\n            {todos.length > 0 ? (\r\n              todos.map((todo) => {\r\n                return (\r\n                  <Todo\r\n                    key={todo.id}\r\n                    title={todo.title}\r\n                    id={todo.id}\r\n                    content={todo.content}\r\n                    setTodoToEdit={setTodoToEdit}\r\n                    setOpen={setOpen}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <>\r\n                <Typography variant=\"h5\">\r\n                  No todos to show.\r\n                  <div className=\"divider\" />\r\n                </Typography>\r\n              </>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authSlice from \"./auth-slice\";\r\nimport notificationSlice from \"./notification-slice\";\r\n\r\nconst store = configureStore({\r\n  reducer: { auth: authSlice.reducer, notification: notificationSlice.reducer },\r\n});\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { authActions } from \"../../store/auth-slice\";\r\nimport { RootState } from \"../../store/index\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { PrivateRouteProps } from \"../../models/models\";\r\n\r\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({\r\n  component: Component,\r\n  ...routeProps\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  if (localStorage.getItem(\"loged\") === \"true\") {\r\n    dispatch(authActions.login(localStorage.getItem(\"userId\")));\r\n  }\r\n\r\n  const isAuth = useSelector((state: RootState) => state.auth.isAuth);\r\n\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={(_) => (isAuth ? <Component /> : <Redirect to=\"/login\" />)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { authActions } from \"../../store/auth-slice\";\r\nimport { InputLogin } from \"../../models/models\";\r\nimport fb from \"../../firebase/firebase\";\r\nimport { FormControl, InputLabel, Input, Button, Box } from \"@material-ui/core\";\r\nimport { initialInput } from \"../../initialState/initialState\";\r\nimport { notificationActions } from \"../../store/notification-slice\";\r\n\r\nconst Login: React.FC = () => {\r\n  const [input, setInput] = useState<InputLogin>(initialInput);\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange =\r\n    (inputName: keyof InputLogin) =>\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setInput({ ...input, [inputName]: e.target.value });\r\n    };\r\n\r\n  const handleLogin = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    fb.auth()\r\n      .signInWithEmailAndPassword(input.email, input.password)\r\n      .then((response) => {\r\n        if (response) {\r\n          const username = response.user!.email?.substring(\r\n            0,\r\n            response.user!.email?.indexOf(\"@\")\r\n          );\r\n\r\n          localStorage.setItem(\"userId\", `${response.user!.uid}`);\r\n          localStorage.setItem(\"loged\", \"true\");\r\n          localStorage.setItem(\"username\", `${username}`);\r\n\r\n          history.push(\"/\");\r\n          dispatch(authActions.login(response.user!.uid));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(\r\n          notificationActions.sendNotification({\r\n            severity: \"error\",\r\n            message: error.message,\r\n            open: true,\r\n          })\r\n        );\r\n      });\r\n    setInput(initialInput);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      style={{ backgroundColor: \"#fff\" }}\r\n      p={2}\r\n      borderRadius={5}\r\n    >\r\n      <FormControl fullWidth>\r\n        <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n        <Input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          onChange={handleChange(\"email\")}\r\n          value={input.email}\r\n        />\r\n      </FormControl>\r\n      <FormControl fullWidth>\r\n        <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n        <Input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          onChange={handleChange(\"password\")}\r\n          value={input.password}\r\n        />\r\n      </FormControl>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick={handleLogin}\r\n      >\r\n        Login\r\n      </Button>\r\n      <Link\r\n        to=\"/registration\"\r\n        style={{\r\n          textAlign: \"center\",\r\n          textDecoration: \"none\",\r\n          fontSize: \"20px\",\r\n        }}\r\n      >\r\n        <p>I don't have and account...</p>\r\n      </Link>\r\n    </Box>\r\n  );\r\n};\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { notificationActions } from \"../../store/notification-slice\";\r\nimport { authActions } from \"../../store/auth-slice\";\r\nimport { InputRegister } from \"../../models/models\";\r\nimport fb from \"../../firebase/firebase\";\r\nimport { FormControl, InputLabel, Input, Button, Box } from \"@material-ui/core\";\r\nimport { initialInputRegistration } from \"../../initialState/initialState\";\r\n\r\nconst Registration: React.FC = () => {\r\n  const [input, setInput] = useState<InputRegister>(initialInputRegistration);\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange =\r\n    (inputName: keyof InputRegister) =>\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setInput({ ...input, [inputName]: e.target.value });\r\n    };\r\n\r\n  const handleLogin = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!(input.password === input.confirmPassword)) {\r\n      dispatch(\r\n        notificationActions.sendNotification({\r\n          severity: \"error\",\r\n          message: \"Passwords don't match.\",\r\n          open: true,\r\n        })\r\n      );\r\n      return;\r\n    }\r\n\r\n    fb.auth()\r\n      .createUserWithEmailAndPassword(input.email, input.password)\r\n\r\n      .then((response) => {\r\n        if (response) {\r\n          const username = response.user!.email?.substring(\r\n            0,\r\n            response.user!.email?.indexOf(\"@\")\r\n          );\r\n\r\n          localStorage.setItem(\"userId\", `${response.user!.uid}`);\r\n          localStorage.setItem(\"username\", `${username}`);\r\n          localStorage.setItem(\"loged\", \"true\");\r\n\r\n          history.push(\"/\");\r\n          dispatch(authActions.login(response.user!.uid));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(\r\n          notificationActions.sendNotification({\r\n            severity: \"error\",\r\n            message: error.message,\r\n            open: true,\r\n          })\r\n        );\r\n      });\r\n    setInput(initialInputRegistration);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      style={{ backgroundColor: \"#fff\" }}\r\n      p={2}\r\n      borderRadius={5}\r\n    >\r\n      <FormControl fullWidth>\r\n        <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n        <Input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          onChange={handleChange(\"email\")}\r\n          value={input.email}\r\n        />\r\n      </FormControl>\r\n      <FormControl fullWidth>\r\n        <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n        <Input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          onChange={handleChange(\"password\")}\r\n          value={input.password}\r\n        />\r\n      </FormControl>\r\n      <FormControl fullWidth>\r\n        <InputLabel htmlFor=\"confirmPassword\">Confirm Password</InputLabel>\r\n        <Input\r\n          id=\"confirmPassword\"\r\n          type=\"password\"\r\n          onChange={handleChange(\"confirmPassword\")}\r\n          value={input.confirmPassword}\r\n        />\r\n      </FormControl>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick={handleLogin}\r\n      >\r\n        Signup\r\n      </Button>\r\n      <Link\r\n        to=\"/login\"\r\n        style={{\r\n          textAlign: \"center\",\r\n          textDecoration: \"none\",\r\n          fontSize: \"20px\",\r\n        }}\r\n      >\r\n        <p>I already have and account...</p>\r\n      </Link>\r\n    </Box>\r\n  );\r\n};\r\nexport default Registration;\r\n","import React from \"react\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\nimport { notificationActions } from \"../store/notification-slice\";\r\n\r\nconst MySnackbar: React.FC = () => {\r\n  let alert;\r\n\r\n  const { severity, message, open } = useSelector(\r\n    (state: RootState) => state.notification\r\n  );\r\n\r\n  switch (severity) {\r\n    case \"error\":\r\n      alert = (\r\n        <Alert variant=\"filled\" style={{ width: \"540px\" }} severity=\"error\">\r\n          {message}\r\n        </Alert>\r\n      );\r\n      break;\r\n    case \"success\":\r\n      alert = (\r\n        <Alert variant=\"filled\" style={{ width: \"540px\" }} severity=\"success\">\r\n          {message}\r\n        </Alert>\r\n      );\r\n      break;\r\n    case \"info\":\r\n      alert = (\r\n        <Alert variant=\"filled\" style={{ width: \"540px\" }} severity=\"info\">\r\n          {message}\r\n        </Alert>\r\n      );\r\n      break;\r\n    case \"warning\":\r\n      alert = (\r\n        <Alert variant=\"filled\" style={{ width: \"540px\" }} severity=\"warning\">\r\n          {message}\r\n        </Alert>\r\n      );\r\n      break;\r\n  }\r\n  const dispatch = useDispatch();\r\n  const handleClose = () => {\r\n    dispatch(notificationActions.showNotification(false));\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n      {alert}\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default MySnackbar;\r\n","import React from \"react\";\r\nimport TodoApp from \"./pages/main/TodoApp\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/index\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport PrivateRoute from \"./pages/main/PrivateRoute\";\r\nimport Login from \"./pages/login/Login\";\r\nimport Registration from \"./pages/registration/Registration\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport MySnackbar from \"./components/MySnackbar\";\r\nimport \"./App.css\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Provider store={store}>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/registration\" component={Registration} />\r\n            <PrivateRoute path=\"/\" component={TodoApp} />\r\n          </Switch>\r\n        </Router>\r\n\r\n        <MySnackbar />\r\n      </Provider>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}