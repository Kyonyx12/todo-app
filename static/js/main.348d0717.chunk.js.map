{"version":3,"sources":["initialState/initialState.ts","store/notification-slice.ts","components/MyModal.tsx","firebase/firebase.ts","components/Todo.tsx","store/auth-slice.ts","components/NewTodo.tsx","pages/main/TodoApp.tsx","store/index.ts","pages/main/PrivateRoute.tsx","pages/login/Login.tsx","pages/registration/Registration.tsx","components/MySnackbar.tsx","App.tsx","index.tsx"],"names":["initialInput","email","password","initialInputRegistration","confirmPassword","initialStateTodo","id","title","content","initialStateTodos","initialStateTodoToEdit","notificationSlice","createSlice","name","initialState","severity","message","open","reducers","sendNotification","state","action","payload","showNotification","notificationActions","actions","MyModal","props","Modal","onClose","setOpen","aria-labelledby","aria-describedby","children","process","firebaseConfig","apiKey","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","fb","firebase","initializeApp","useStyles","makeStyles","root","height","display","width","flexDirection","justifyContent","color","backgroundColor","boxShadow","paper","alignItems","transform","border","Todo","setTodoToEdit","useState","openModal","setOpenModal","userId","useSelector","auth","dispatch","useDispatch","classes","body","className","Box","Button","variant","onClick","firestore","collection","doc","delete","catch","error","handleDelete","Grid","item","xs","sm","md","textAlign","Typography","noWrap","CardContent","paragraph","CardActions","size","todoData","update","handleEdit","authSlice","isAuth","darkmodeOn","login","logout","darkmode","authActions","NewTodo","todoToEdit","todo","setTodo","useEffect","handleChange","inputName","e","target","value","Date","now","saveTodo","a","set","then","Container","component","maxWidth","FormControl","fullWidth","InputLabel","Input","onChange","multiline","rows","flexWrap","my","preventDefault","theme","createStyles","palette","background","shadows","padding","spacing","TodoApp","todos","setTodos","darkMode","setDarkMode","history","useHistory","userName","localStorage","getItem","createMuiTheme","type","handleDarkMode","setItem","getTodos","orderBy","onSnapshot","querySnapshot","forEach","push","data","ThemeProvider","CssBaseline","alignContent","mx","removeItem","signOut","replace","pt","mt","container","direction","justify","length","map","store","configureStore","reducer","notification","PrivateRoute","Component","routeProps","render","_","to","Login","input","setInput","htmlFor","signInWithEmailAndPassword","response","username","user","substring","indexOf","uid","style","textDecoration","fontSize","Registration","createUserWithEmailAndPassword","MySnackbar","alert","Alert","Snackbar","autoHideDuration","App","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.348d0717.chunk.js","sourcesContent":["import { Todo } from \"../models/models\";\r\nimport { Auth } from \"../models/models\";\r\n\r\n//Slices\r\n\r\nexport const initialStateAuth: Auth = {\r\n  isAuth: null,\r\n  userId: null,\r\n  darkmodeOn: false,\r\n};\r\n\r\n//Components\r\n\r\nexport const initialInput = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nexport const initialInputRegistration = {\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\nexport const initialError = {\r\n  error: false,\r\n  errorMessage: \"\",\r\n};\r\n\r\nexport const initialStateTodo = { id: null, title: \"\", content: \"\" };\r\n\r\nexport const initialStateNotification = {\r\n  severity: \"\",\r\n  message: \"\",\r\n  open: false,\r\n};\r\n\r\n//maybe and error? todoapp.tsx\r\nexport const initialStateTodos: Todo[] = [];\r\nexport const initialStateTodoToEdit: Todo = {\r\n  id: null,\r\n  title: \"\",\r\n  content: \"\",\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { initialStateNotification } from \"../initialState/initialState\";\r\nimport { Notification } from \"../models/models\";\r\n\r\nconst notificationSlice = createSlice({\r\n  name: \"notification\",\r\n  initialState: initialStateNotification,\r\n  reducers: {\r\n    sendNotification(state, action: PayloadAction<Notification>) {\r\n      state.severity = action.payload.severity;\r\n      state.message = action.payload.message;\r\n      state.open = action.payload.open;\r\n    },\r\n    showNotification(state, action: PayloadAction<boolean>) {\r\n      state.open = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const notificationActions = notificationSlice.actions;\r\nexport default notificationSlice;\r\n","import React, { ReactElement } from \"react\";\r\nimport { Modal } from \"@material-ui/core\";\r\n\r\nconst MyModal: React.FC<{\r\n  children: ReactElement;\r\n  open: boolean;\r\n  setOpen: (bool: boolean) => void;\r\n}> = (props) => {\r\n  return (\r\n    <Modal\r\n      open={props.open}\r\n      onClose={() => props.setOpen(false)}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      {props.children}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MyModal;\r\n","import firebase from \"firebase\";\r\n\r\nconst {\r\n  REACT_APP_API_KEY,\r\n  REACT_APP_AUTH_DOMAIN,\r\n  REACT_APP_PROJECT_ID,\r\n  REACT_APP_STORAGE_BUCKET,\r\n  REACT_APP_MESSAGING_SENDER_ID,\r\n  REACT_APP_APP_ID,\r\n} = process.env;\r\n\r\nvar firebaseConfig = {\r\n  apiKey: REACT_APP_API_KEY,\r\n  authDomain: REACT_APP_AUTH_DOMAIN,\r\n  projectId: REACT_APP_PROJECT_ID,\r\n  storageBucket: REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: REACT_APP_APP_ID,\r\n};\r\nconst fb = firebase.initializeApp(firebaseConfig);\r\nexport default fb;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Box,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../store/index\";\r\nimport { Todo as TodoType } from \"../models/models\";\r\nimport { notificationActions } from \"../store/notification-slice\";\r\nimport MyModal from \"./MyModal\";\r\nimport fb from \"../firebase/firebase\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"150px\",\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    backgroundColor: \"#fafafa\",\r\n    boxShadow: \"0 0 8px rgba(0,0,0,0.25)\",\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    width: \"70vw\",\r\n    height: \"120px\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    transform: \"translate(20%,283%)\",\r\n    backgroundColor: \"#fafafa\",\r\n    border: \"2px solid #000\",\r\n  },\r\n});\r\n\r\nconst Todo: React.FC<{\r\n  title: string;\r\n  id: number | null;\r\n  content: string;\r\n  setTodoToEdit: (todoToEdit: TodoType) => void;\r\n  setOpen: (setOpen: boolean) => void;\r\n}> = ({ title, id, content, setTodoToEdit, setOpen }) => {\r\n  const [openModal, setOpenModal] = useState<boolean>(false);\r\n  const userId = useSelector((state: RootState) => state.auth.userId);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const handleDelete = (id: number | null) => {\r\n    fb.firestore()\r\n      .collection(`todos`)\r\n      .doc(\"users\")\r\n      .collection(`${userId}`)\r\n      .doc(`${id}`)\r\n      .delete()\r\n      .catch((error) =>\r\n        dispatch(\r\n          notificationActions.sendNotification({\r\n            severity: \"error\",\r\n            message: error.message,\r\n            open: true,\r\n          })\r\n        )\r\n      );\r\n    dispatch(\r\n      notificationActions.sendNotification({\r\n        severity: \"warning\",\r\n        message: \"Todo deleted.\",\r\n        open: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleEdit = (id: number | null) => {\r\n    setOpen(true);\r\n    const todoData = { id, title, content };\r\n    setTodoToEdit(todoData);\r\n\r\n    fb.firestore()\r\n      .collection(`todos`)\r\n      .doc(\"users\")\r\n      .collection(`${userId}`)\r\n      .doc(`${id}`)\r\n      .update(todoData)\r\n      .catch((error) =>\r\n        dispatch(\r\n          notificationActions.sendNotification({\r\n            severity: \"error\",\r\n            message: error.message,\r\n            open: true,\r\n          })\r\n        )\r\n      );\r\n  };\r\n\r\n  const body = (\r\n    <div className={classes.paper}>\r\n      <h2>Do you want to delete this Todo?</h2>\r\n      <Box>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => handleDelete(id)}\r\n        >\r\n          Delete\r\n        </Button>\r\n        <Button variant=\"contained\" onClick={() => setOpenModal(false)}>\r\n          Cancel\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <MyModal open={openModal} setOpen={setOpenModal}>\r\n        {body}\r\n      </MyModal>\r\n      <Grid item xs={12} sm={6} md={4}>\r\n        <Box className={classes.root}>\r\n          <Box textAlign=\"center\">\r\n            <Typography noWrap variant=\"h6\">\r\n              {title}\r\n            </Typography>\r\n          </Box>\r\n          <CardContent>\r\n            <Typography noWrap paragraph>\r\n              {content}\r\n            </Typography>\r\n          </CardContent>\r\n          <Box display=\"flex\" justifyContent=\"flex-end\">\r\n            <CardActions>\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                onClick={() => handleEdit(id)}\r\n              >\r\n                <EditRoundedIcon />\r\n              </Button>\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => setOpenModal(true)}\r\n              >\r\n                <HighlightOffRoundedIcon />\r\n              </Button>\r\n            </CardActions>\r\n          </Box>\r\n        </Box>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { initialStateAuth } from \"../initialState/initialState\";\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: initialStateAuth,\r\n  reducers: {\r\n    login(state, action: PayloadAction<string | null>) {\r\n      state.isAuth = true;\r\n      state.userId = action.payload;\r\n    },\r\n    logout(state) {\r\n      state.isAuth = false;\r\n      state.userId = null;\r\n    },\r\n    darkmode(state, action: PayloadAction<boolean>) {\r\n      state.darkmodeOn = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const authActions = authSlice.actions;\r\nexport default authSlice;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  Container,\r\n  Button,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport Todo, { InputTodo } from \"../models/models\";\r\nimport fb from \"../firebase/firebase\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store/index\";\r\nimport { notificationActions } from \"../store/notification-slice\";\r\nimport { initialStateTodo } from \"../initialState/initialState\";\r\n\r\nconst NewTodo: React.FC<{\r\n  todoToEdit: Todo;\r\n  setTodoToEdit: (todoToEdit: Todo) => void;\r\n  setOpen: (setOpen: boolean) => void;\r\n}> = ({ todoToEdit, setTodoToEdit, setOpen }) => {\r\n  const [todo, setTodo] = useState<InputTodo>(initialStateTodo);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userId = useSelector((state: RootState) => state.auth.userId);\r\n\r\n  useEffect(() => {\r\n    if (todoToEdit.id) {\r\n      setTodo(todoToEdit);\r\n    }\r\n    return () => setTodo(initialStateTodo);\r\n  }, [todoToEdit]);\r\n\r\n  const handleChange =\r\n    (inputName: keyof InputTodo) =>\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (todo.id) {\r\n        setTodo({\r\n          ...todo,\r\n          [inputName]: e.target.value,\r\n        });\r\n      } else {\r\n        setTodo({\r\n          ...todo,\r\n          [inputName]: e.target.value,\r\n          id: Date.now(),\r\n        });\r\n      }\r\n    };\r\n\r\n  const saveTodo = async (id: any, title: string, content: string) => {\r\n    await fb\r\n      .firestore()\r\n      .collection(`todos`)\r\n      .doc(\"users\")\r\n      .collection(`${userId}`)\r\n      .doc(`${id}`)\r\n      .set({ id, title, content })\r\n      .then(() => {\r\n        setTodo(initialStateTodo);\r\n      })\r\n      .catch((error) => {\r\n        dispatch(\r\n          notificationActions.sendNotification({\r\n            severity: \"error\",\r\n            message: error.message,\r\n            open: true,\r\n          })\r\n        );\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (todo.title === \"\" || todo.content === \"\") {\r\n      dispatch(\r\n        notificationActions.sendNotification({\r\n          severity: \"error\",\r\n          message: \"Inputs cannot be empty.\",\r\n          open: true,\r\n        })\r\n      );\r\n      return;\r\n    }\r\n\r\n    saveTodo(todo.id, todo.title, todo.content);\r\n\r\n    if (todoToEdit.id) {\r\n      setTodoToEdit({ id: null, title: \"\", content: \"\" });\r\n      dispatch(\r\n        notificationActions.sendNotification({\r\n          severity: \"info\",\r\n          message: \"Todo updated.\",\r\n          open: true,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        notificationActions.sendNotification({\r\n          severity: \"success\",\r\n          message: \"New todo added.\",\r\n          open: true,\r\n        })\r\n      );\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  const handleCancel = () => {\r\n    setTodoToEdit({ id: null, title: \"\", content: \"\" });\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\">\r\n      <FormControl fullWidth>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input onChange={handleChange(\"title\")} value={todo.title} />\r\n      </FormControl>\r\n      <FormControl fullWidth>\r\n        <InputLabel>Content</InputLabel>\r\n        <Input\r\n          onChange={handleChange(\"content\")}\r\n          value={todo.content}\r\n          multiline={true}\r\n          rows=\"4\"\r\n        />\r\n      </FormControl>\r\n      <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"space-evenly\">\r\n        <Box width=\"40%\" my={1}>\r\n          <Button\r\n            onClick={handleSubmit}\r\n            variant=\"contained\"\r\n            fullWidth\r\n            color=\"primary\"\r\n          >\r\n            {todoToEdit.id ? \"Update\" : \"Add\"}\r\n          </Button>\r\n        </Box>\r\n        <Box width=\"40%\" my={1}>\r\n          <Button\r\n            onClick={handleCancel}\r\n            variant=\"contained\"\r\n            fullWidth\r\n            color=\"default\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NewTodo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  ThemeProvider,\r\n  CssBaseline,\r\n  createMuiTheme,\r\n} from \"@material-ui/core\";\r\nimport { IoMdAddCircle } from \"react-icons/io\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../store/index\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Todo from \"../../components/Todo\";\r\n\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport { Todo as TodoType } from \"../../models/models\";\r\nimport { authActions } from \"../../store/auth-slice\";\r\nimport { notificationActions } from \"../../store/notification-slice\";\r\nimport NewTodo from \"../../components/NewTodo\";\r\nimport fb from \"../../firebase/firebase\";\r\nimport { BsSun, BsMoon } from \"react-icons/bs\";\r\nimport MyModal from \"../../components/MyModal\";\r\nimport {\r\n  initialStateTodos,\r\n  initialStateTodoToEdit,\r\n} from \"../../initialState/initialState\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      width: \"70vw\",\r\n      height: \"280px\",\r\n      transform: \"translate(21.5%,80%)\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 2, 2),\r\n    },\r\n  })\r\n);\r\n\r\nconst TodoApp: React.FC = () => {\r\n  const [todos, setTodos] = useState<TodoType[]>(initialStateTodos);\r\n  const [todoToEdit, setTodoToEdit] = useState(initialStateTodoToEdit);\r\n  const [open, setOpen] = useState(false);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const userId = useSelector((state: RootState) => state.auth.userId);\r\n  const darkmodeOn = useSelector((state: RootState) => state.auth.darkmodeOn);\r\n\r\n  const userName = localStorage.getItem(\"username\");\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: darkMode ? \"dark\" : \"light\",\r\n    },\r\n  });\r\n\r\n  const handleDarkMode = () => {\r\n    if (darkMode) {\r\n      setDarkMode(false);\r\n      localStorage.setItem(\"darkmode\", \"off\");\r\n    } else {\r\n      setDarkMode(true);\r\n      localStorage.setItem(\"darkmode\", \"on\");\r\n    }\r\n  };\r\n\r\n  const getTodos = async (userId: string | null) => {\r\n    await fb\r\n      .firestore()\r\n      .collection(`todos`)\r\n      .doc(\"users\")\r\n      .collection(`${userId}`)\r\n      .orderBy(\"id\", \"desc\")\r\n      .onSnapshot((querySnapshot) => {\r\n        let todos: any = [];\r\n        querySnapshot.forEach((todo) => {\r\n          todos.push({ ...todo.data() });\r\n        });\r\n        setTodos(todos);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTodos(userId);\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    if (darkmodeOn) {\r\n      setDarkMode(true);\r\n    } else {\r\n      setDarkMode(false);\r\n    }\r\n  }, [darkmodeOn]);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"loged\");\r\n    localStorage.removeItem(\"username\");\r\n    localStorage.removeItem(\"userId\");\r\n\r\n    fb.auth()\r\n      .signOut()\r\n      .then(() => {\r\n        history.replace(\"/login\");\r\n        dispatch(authActions.login(null));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(\r\n          notificationActions.sendNotification({\r\n            severity: \"error\",\r\n            message: error.message,\r\n            open: true,\r\n          })\r\n        );\r\n      });\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const body = (\r\n    <div className={classes.paper}>\r\n      <NewTodo\r\n        todoToEdit={todoToEdit}\r\n        setTodoToEdit={setTodoToEdit}\r\n        setOpen={setOpen}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <MyModal open={open} setOpen={setOpen}>\r\n        {body}\r\n      </MyModal>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            my={1}\r\n          >\r\n            <Typography noWrap variant=\"h6\">\r\n              {userName}\r\n            </Typography>\r\n            <Box display=\"flex\" alignContent=\"center\">\r\n              <Box mx={2}>\r\n                {!darkMode ? (\r\n                  <Button>\r\n                    <BsMoon size=\"2rem\" onClick={handleDarkMode} />\r\n                  </Button>\r\n                ) : (\r\n                  <Button>\r\n                    <BsSun size=\"2rem\" onClick={handleDarkMode} />\r\n                  </Button>\r\n                )}\r\n              </Box>\r\n              <Button onClick={handleLogout} variant=\"contained\">\r\n                Logout\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n          <h1>Todo App</h1>\r\n          <Box display=\"flex\" justifyContent=\"flex-end\" pt={10}>\r\n            <Button onClick={() => setOpen(true)}>\r\n              <IoMdAddCircle size=\"4rem\" />\r\n            </Button>\r\n          </Box>\r\n          <Box mt={2}>\r\n            <Grid container direction=\"row\" justify=\"center\" spacing={1}>\r\n              {todos.length > 0 ? (\r\n                todos.map((todo) => {\r\n                  return (\r\n                    <Todo\r\n                      key={todo.id}\r\n                      title={todo.title}\r\n                      id={todo.id}\r\n                      content={todo.content}\r\n                      setTodoToEdit={setTodoToEdit}\r\n                      setOpen={setOpen}\r\n                    />\r\n                  );\r\n                })\r\n              ) : (\r\n                <p>No todos to show.</p>\r\n              )}\r\n            </Grid>\r\n          </Box>\r\n        </CssBaseline>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authSlice from \"./auth-slice\";\r\nimport notificationSlice from \"./notification-slice\";\r\n\r\nconst store = configureStore({\r\n  reducer: { auth: authSlice.reducer, notification: notificationSlice.reducer },\r\n});\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { authActions } from \"../../store/auth-slice\";\r\nimport { RootState } from \"../../store/index\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { PrivateRouteProps } from \"../../models/models\";\r\n\r\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({\r\n  component: Component,\r\n  ...routeProps\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  if (localStorage.getItem(\"loged\") === \"true\") {\r\n    dispatch(authActions.login(localStorage.getItem(\"userId\")));\r\n  }\r\n  if (localStorage.getItem(\"darkmode\") === \"on\") {\r\n    dispatch(authActions.darkmode(true));\r\n  }\r\n  const isAuth = useSelector((state: RootState) => state.auth.isAuth);\r\n\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={(_) => (isAuth ? <Component /> : <Redirect to=\"/login\" />)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { authActions } from \"../../store/auth-slice\";\r\nimport { InputLogin } from \"../../models/models\";\r\nimport fb from \"../../firebase/firebase\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  Button,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { initialInput } from \"../../initialState/initialState\";\r\nimport { notificationActions } from \"../../store/notification-slice\";\r\n\r\nconst Login: React.FC = () => {\r\n  const [input, setInput] = useState<InputLogin>(initialInput);\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange =\r\n    (inputName: keyof InputLogin) =>\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setInput({ ...input, [inputName]: e.target.value });\r\n    };\r\n\r\n  const handleLogin = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    fb.auth()\r\n      .signInWithEmailAndPassword(input.email, input.password)\r\n      .then((response) => {\r\n        if (response) {\r\n          const username = response.user!.email?.substring(\r\n            0,\r\n            response.user!.email?.indexOf(\"@\")\r\n          );\r\n\r\n          localStorage.setItem(\"userId\", `${response.user!.uid}`);\r\n          localStorage.setItem(\"loged\", \"true\");\r\n          localStorage.setItem(\"username\", `${username}`);\r\n\r\n          history.push(\"/\");\r\n          dispatch(authActions.login(response.user!.uid));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(\r\n          notificationActions.sendNotification({\r\n            severity: \"error\",\r\n            message: error.message,\r\n            open: true,\r\n          })\r\n        );\r\n      });\r\n    setInput(initialInput);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <FormControl fullWidth>\r\n        <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n        <Input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          onChange={handleChange(\"email\")}\r\n          value={input.email}\r\n        />\r\n      </FormControl>\r\n      <FormControl fullWidth>\r\n        <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n        <Input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          onChange={handleChange(\"password\")}\r\n          value={input.password}\r\n        />\r\n      </FormControl>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick={handleLogin}\r\n      >\r\n        Login\r\n      </Button>\r\n      <Link\r\n        to=\"/registration\"\r\n        style={{\r\n          textAlign: \"center\",\r\n          textDecoration: \"none\",\r\n          fontSize: \"20px\",\r\n        }}\r\n      >\r\n        <p>I don't have and account...</p>\r\n      </Link>\r\n    </Container>\r\n  );\r\n};\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { notificationActions } from \"../../store/notification-slice\";\r\nimport { authActions } from \"../../store/auth-slice\";\r\nimport { InputRegister } from \"../../models/models\";\r\nimport fb from \"../../firebase/firebase\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  Button,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { initialInputRegistration } from \"../../initialState/initialState\";\r\n\r\nconst Registration: React.FC = () => {\r\n  const [input, setInput] = useState<InputRegister>(initialInputRegistration);\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange =\r\n    (inputName: keyof InputRegister) =>\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setInput({ ...input, [inputName]: e.target.value });\r\n    };\r\n\r\n  const handleLogin = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!(input.password === input.confirmPassword)) {\r\n      dispatch(\r\n        notificationActions.sendNotification({\r\n          severity: \"error\",\r\n          message: \"Passwords don't match.\",\r\n          open: true,\r\n        })\r\n      );\r\n      return;\r\n    }\r\n\r\n    fb.auth()\r\n      .createUserWithEmailAndPassword(input.email, input.password)\r\n\r\n      .then((response) => {\r\n        if (response) {\r\n          const username = response.user!.email?.substring(\r\n            0,\r\n            response.user!.email?.indexOf(\"@\")\r\n          );\r\n\r\n          localStorage.setItem(\"userId\", `${response.user!.uid}`);\r\n          localStorage.setItem(\"username\", `${username}`);\r\n          localStorage.setItem(\"loged\", \"true\");\r\n\r\n          history.push(\"/\");\r\n          dispatch(authActions.login(response.user!.uid));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(\r\n          notificationActions.sendNotification({\r\n            severity: \"error\",\r\n            message: error.message,\r\n            open: true,\r\n          })\r\n        );\r\n      });\r\n    setInput(initialInputRegistration);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <FormControl fullWidth>\r\n        <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n        <Input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          onChange={handleChange(\"email\")}\r\n          value={input.email}\r\n        />\r\n      </FormControl>\r\n      <FormControl fullWidth>\r\n        <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n        <Input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          onChange={handleChange(\"password\")}\r\n          value={input.password}\r\n        />\r\n      </FormControl>\r\n      <FormControl fullWidth>\r\n        <InputLabel htmlFor=\"confirmPassword\">Confirm Password</InputLabel>\r\n        <Input\r\n          id=\"confirmPassword\"\r\n          type=\"password\"\r\n          onChange={handleChange(\"confirmPassword\")}\r\n          value={input.confirmPassword}\r\n        />\r\n      </FormControl>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick={handleLogin}\r\n      >\r\n        Signup\r\n      </Button>\r\n      <Link\r\n        to=\"/login\"\r\n        style={{\r\n          textAlign: \"center\",\r\n          textDecoration: \"none\",\r\n          fontSize: \"20px\",\r\n        }}\r\n      >\r\n        <p>I already have and account...</p>\r\n      </Link>\r\n    </Container>\r\n  );\r\n};\r\nexport default Registration;\r\n","import React from \"react\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\nimport { notificationActions } from \"../store/notification-slice\";\r\n\r\nconst MySnackbar: React.FC = () => {\r\n  let alert;\r\n\r\n  const { severity, message, open } = useSelector(\r\n    (state: RootState) => state.notification\r\n  );\r\n\r\n  switch (severity) {\r\n    case \"error\":\r\n      alert = <Alert severity=\"error\">{message}</Alert>;\r\n      break;\r\n    case \"success\":\r\n      alert = <Alert severity=\"success\">{message}</Alert>;\r\n      break;\r\n    case \"info\":\r\n      alert = <Alert severity=\"info\">{message}</Alert>;\r\n      break;\r\n    case \"warning\":\r\n      alert = <Alert severity=\"warning\">{message}</Alert>;\r\n      break;\r\n  }\r\n  const dispatch = useDispatch();\r\n  const handleClose = () => {\r\n    dispatch(notificationActions.showNotification(false));\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n      {alert}\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default MySnackbar;\r\n","import React from \"react\";\r\nimport TodoApp from \"./pages/main/TodoApp\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/index\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport PrivateRoute from \"./pages/main/PrivateRoute\";\r\nimport Login from \"./pages/login/Login\";\r\nimport Registration from \"./pages/registration/Registration\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport MySnackbar from \"./components/MySnackbar\";\r\nimport \"./App.css\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Provider store={store}>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/registration\" component={Registration} />\r\n            <PrivateRoute path=\"/\" component={TodoApp} />\r\n          </Switch>\r\n        </Router>\r\n        <MySnackbar />\r\n      </Provider>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}